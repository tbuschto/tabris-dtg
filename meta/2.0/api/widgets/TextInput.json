{
  "type": "TextInput",
  "description": "A widget that allows to enter text.",
  "extends": "Widget",
  "properties": {
    "type": {
      "type": "string",
      "values": [
        "default",
        "password",
        "search",
        "multiline"
      ],
      "default": "default",
      "static": true,
      "description": "The type of the text widget."
    },
    "text": {
      "type": "string",
      "description": "The text in the input field."
    },
    "message": {
      "type": "string",
      "description": "A hint text that is displayed when the input field is empty. Does not apply on iOS when `type` is set to `multiline`."
    },
    "editable": {
      "type": "boolean",
      "default": "true",
      "description": "Whether the text can be edited or not."
    },
    "alignment": {
      "type": "string",
      "values": [
        "left",
        "right",
        "center"
      ],
      "default": "left",
      "description": "The horizontal alignment of the text."
    },
    "autoCorrect": {
      "type": "boolean",
      "default": "false",
      "description": "Enables the spell checker and auto-correction feature."
    },
    "autoCapitalize": {
      "type": "boolean",
      "default": "false",
      "description": "Automatically switch to capital letters after every key pressed."
    },
    "keyboard": {
      "type": "string",
      "values": [
        "ascii",
        "decimal",
        "email",
        "number",
        "numbersAndPunctuation",
        "phone",
        "url",
        "default"
      ],
      "default": "default",
      "description": "Selects the keyboard type to use for editing this widget. Has no effect when `type` is set to `multiline`."
    },
    "focused": {
      "type": "boolean",
      "default": "false",
      "description": "Reflects whether this widget has the keyboard focus. Setting this property to `true` will focus the widget and open the virtual keyboard, setting it to `false` will remove the focus and hide the virtual keyboard."
    },
    "keepFocus": {
      "type": "boolean",
      "default": "false",
      "description": "When `true` the `TextInput` will keep its focus, even when tapped outside of the widget bounds."
    },
    "fillColor": {
      "type": "Color",
      "description": "The color of the background of the TextInput - applies only to iOS."
    },
    "borderColor": {
      "type": "Color",
      "description": "The color of the border of the TextInput. On iOS this is a rectangular border around the TextInput, on Android it is a single line below the TextInput."
    }
  },
  "events": {
    "accept": {
      "description": "Fired when a text input has been finished by pressing the keyboard's Enter key. The label of this key may vary depending on the platform and locale.",
      "parameters": {
        "text": {
          "description": "The current value of *[text](#text)*.",
          "type": "string"
        }
      }
    },
    "blur": {
      "description": "Fired when the widget lost focus."
    },
    "focus": {
      "description": "Fired when the widget gains focus."
    },
    "change:text": {
      "description": "Fired when the text property changes.",
      "parameters": {
        "value": {
          "description": "The new value of the `text` property.",
          "type": "string"
        }
      }
    },
    "input": {
      "description": "Fired when the text was changed by the user.",
      "parameters": {
        "text": {
          "type": "string",
          "description": "The new value of *[text](#text)*."
        }
      }
    }
  },
  "links": [
    {
      "title": "Simple TextInput snippet",
      "path": "${GITHUB_BRANCH}/snippets/textinput.js"
    },
    {
      "title": "Example with Text and other input controls",
      "path": "${GITHUB_BRANCH}/examples/input/input.js"
    }
  ]
}
