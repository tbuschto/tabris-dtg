{
  "type": "WebView",
  "description": "A widget that can display a web page. Since this widget requires a lot of resources it's recommended to have no more than one instance at a time.",
  "extends": "Widget",
  "properties": {
    "url": {
      "type": "string",
      "description": "The URL of the web page to display. Relative URLs are resolved relative to 'package.json'. Returns empty string when content from *html* property is displayed."
    },
    "html": {
      "type": "string",
      "description": "A complete HTML document to display. Always returns the last set value."
    }
  },
  "events": {
    "navigate": {
      "description": "Fired when the WebView is about to navigate to a new URL.",
      "parameters": {
        "preventDefault": {
          "description": "Call to intercept the navigation.",
          "type": "() => void"
        },
        "url": {
          "description": "The new URL the WebView is about to navigate to.",
          "type": "string"
        }
      }
    },
    "load": {
      "description": "Fired when the url has been loaded."
    },
    "download": {
      "description": "Fired when the WebView requests a download. The download event provides the properties `url`, `mimeType`, `contentLength` and `contentDisposition`. Supported only on Android.",
      "parameters": {
        "url": {
          "description": "The URL of the resource to be downloaded.",
          "type": "string"
        },
        "mimeType": {
          "description": "The mime type of the resource to be downloaded.",
          "type": "string"
        },
        "contentLength": {
          "description": "The size of the downloaded entity body.",
          "type": "number"
        },
        "contentDisposition": {
          "description": "Indicates whether the download is expected to be displayed inline or to be downloaded as an attachment.",
          "type": "string"
        }
      }
    },
    "message": {
      "description": "Fired when a web message has been sent via `window.parent.postMessage(message, targetOrigin)` from inside the `WebView`.",
      "parameters": {
        "data": {
          "description": "The sent message.",
          "type": "string"
        }
      }
    }
  },
  "methods": {
    "postMessage": [
      {
        "parameters": [
          {
            "name": "message",
            "type": "string",
            "description": "The message to send. Currently supports only strings."
          },
          {
            "name": "targetOrigin",
            "type": "string",
            "description": "The URL of the page that recieves the message. The message is only sent if the current document URL has the same scheme, domain and path. Use `*` to send to any URL."
          }
        ],
        "description": "Posts a web message to the underlying `window` object of the WebView. The website in the `WebView` can register for the message in the following fashion: `window.addEventListener('message', callbackFunction)`. For more information see [`Window.postMessage()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) API.",
        "returns": "this"
      }
    ]
  },
  "links": [
    {
      "title": "Simple WebView snippet",
      "path": "${GITHUB_BRANCH}/snippets/webview.js"
    },
    {
      "title": "WebView snippet demonstrating web messaging",
      "path": "${GITHUB_BRANCH}/snippets/webview-webmessaging.js"
    },
    {
      "title": "Web Messaging",
      "path": "https://en.wikipedia.org/wiki/Web_Messaging"
    }
  ]
}
