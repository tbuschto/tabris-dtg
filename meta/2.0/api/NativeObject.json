{
  "type": "NativeObject",
  "description": "Base class for all objects with a native implementation.",
  "properties": {
    "cid": {
      "type": "string",
      "readonly": true,
      "description": "An application-wide unique identifier automatically assigned to all native objects on creation."
    }
  },
  "methods": {
    "on": [
      {
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "description": "The type of events to listen for."
          },
          {
            "name": "listener",
            "type": "(event: any) => void",
            "description": "The listener function to register. This function will be called with an event object."
          },
          {
            "name": "context?",
            "type": "Object",
            "description": "In the listener function, `this` will point to this object. If not present, the listener will be called in the context of this object."
          }
        ],
        "returns": "this",
        "description": "Registers a *listener* function to be notified of events of the given *type*."
      }
    ],
    "once": [
      {
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "description": "The type of the event to listen for."
          },
          {
            "name": "listener",
            "type": "(event: any) => void",
            "description": "The listener function to register. This function will be called with an event object."
          },
          {
            "name": "context?",
            "type": "Object",
            "description": "In the listener function, `this` will point to this object. If not present, the listener will be called in the context of this object."
          }
        ],
        "returns": "this",
        "description": "Same as `on`, but removes the listener after it has been invoked by an event."
      }
    ],
    "off": [
      {
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "description": "The type of events to remove listeners for."
          },
          {
            "name": "listener",
            "type": "(event: any) => void",
            "description": "The listener function to remove."
          },
          {
            "name": "context?",
            "type": "Object",
            "description": "The context of the bound listener to remove."
          }
        ],
        "returns": "this",
        "description": "Removes all occurrences of *listener* that are bound to *type* and *context* from this widget."
      }
    ],
    "trigger": [
      {
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "decscription": "The type of event to trigger"
          },
          {
            "name": "event",
            "type": "Object",
            "description": "The event object to pass to listener functions."
          }
        ],
        "returns": "this",
        "description": "Notifies all registered listeners for the given *type* and passes the *event* object to the listeners."
      }
    ],
    "set": [
      {
        "parameters": [
          {
            "name": "property",
            "type": "string"
          },
          {
            "name": "value",
            "type": "any"
          }
        ],
        "description": "Sets the given property.",
        "returns": "this"
      },
      {
        "parameters": [
          {
            "name": "properties",
            "type": "Object"
          }
        ],
        "description": "Sets all key-value pairs in the properties object as widget properties.",
        "returns": "this"
      }
    ],
    "get": [
      {
        "parameters": [
          {
            "name": "property",
            "type": "string"
          }
        ],
        "returns": "any",
        "description": "Gets the current value of the given *property*."
      }
    ]
  }
}
